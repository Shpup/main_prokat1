
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    @vite(['resources/css/app.css'])
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"></script>
</head>
<div class="bg-white shadow rounded-lg">
     @include('layouts.navigation')
     <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->

     <!-- –§–∏–ª—å—Ç—Ä—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ -->
     <div class="px-6 py-4 border-b border-gray-200">
         <div class="flex justify-between items-center">
             <!-- –ë–ª–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ -->
             <div class="flex items-center space-x-4">
                 <select id="employeeFilter" class="rounded-lg border-gray-300 shadow-sm focus:border-primary focus:ring-primary px-3 py-2 text-sm">
                     <option value="">–í—Å–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</option>
                     @foreach($employees as $employee)
                         <option value="{{ $employee['id'] }}">{{ $employee['name'] }}</option>
                     @endforeach
                 </select>

                 <select id="specialtyFilter" class="rounded-lg border-gray-300 shadow-sm focus:border-primary focus:ring-primary px-3 py-2 text-sm">
                     <option value="">–í—Å–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</option>
                     @foreach($specialties as $specialty)
                         <option value="{{ $specialty['id'] }}">{{ $specialty['name'] }}</option>
                     @endforeach
                 </select>

                                   <div class="flex items-center space-x-2">
                      <span class="text-sm text-gray-600">–î–∞—Ç–∞:</span>
                      <input type="date" id="calendarDate" class="rounded-lg border-gray-300 shadow-sm focus:border-primary focus:ring-primary px-3 py-2 text-sm" value="{{ date('Y-m-d') }}">
                  </div>
             </div>

                           <!-- –ë–ª–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è -->
              <div class="flex items-center space-x-4">
                                     <div class="flex items-center space-x-1">
                       <span class="text-sm text-gray-600 mr-2">–í–∏–¥:</span>
                       <button class="view-btn px-3 py-2 text-sm rounded-lg border bg-primary text-white" data-view="day">–î–µ–Ω—å</button>
                       <button class="view-btn px-3 py-2 text-sm rounded-lg border" data-view="week">–ù–µ–¥–µ–ª—è</button>
                       <button class="view-btn px-3 py-2 text-sm rounded-lg border" data-view="month">–ú–µ—Å—è—Ü</button>
                   </div>

                                     <div class="flex items-center space-x-2">
                       <span class="text-sm text-gray-600">–ò–Ω—Ç–µ—Ä–≤–∞–ª:</span>
                                              <select id="timeInterval" class="rounded-lg border-gray-300 shadow-sm focus:border-primary focus:ring-primary px-3 py-2 text-sm">
                            <option value="30m">30 –º–∏–Ω—É—Ç</option>
                            <option value="60m" selected>1 —á–∞—Å</option>
                            <option value="4h">4 —á–∞—Å–∞</option>
                        </select>
                   </div>


              </div>
         </div>
     </div>

                                                                       <!-- –¢–∞–±–ª–∏—Ü–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è -->
        <div class="px-8 py-6">
                         <div class="table-scroll overflow-x-auto whitespace-nowrap">
                                                               <table class="divide-y divide-gray-200" id="calendarTable" style="min-width: max-content;">
                  <thead class="bg-gray-50">
                      <tr>
                          <th class="px-8 py-4 text-left text-sm font-medium text-gray-500 uppercase tracking-wider w-64 sticky left-0 bg-gray-50 z-10">
                              –°–æ—Ç—Ä—É–¥–Ω–∏–∫
                          </th>
                                                     @foreach($timeSlots as $slot)
                                                               <th class="px-2 py-4 text-center text-xs font-medium text-gray-500 uppercase tracking-wider time-slot-header" style="width: 80px !important; min-width: 80px !important;">
                                    {{ $slot }}
                                </th>
                           @endforeach
                      </tr>
                  </thead>
                  <tbody class="bg-white divide-y divide-gray-200">
                      @foreach($employees as $employee)
                                                     <tr class="employee-row" data-employee-id="{{ $employee['id'] }}" data-specialty="{{ $employee['specialty']['name'] }}">
                              <td class="px-8 py-6 whitespace-nowrap sticky left-0 bg-white z-10">
                                  <div class="flex items-center">
                                      <div class="text-base font-medium text-gray-900">{{ $employee['name'] }}</div>
                                      @if(isset($employee['specialty']))
                                          <div class="ml-2 text-base text-gray-500">({{ $employee['specialty']['name'] }})</div>
                                      @endif
                                  </div>
                              </td>
                                                             @foreach($timeSlots as $slot)
                                                                       <td class="px-2 py-6 whitespace-nowrap time-slot-cell" style="width: 80px !important; min-width: 80px !important;">
                                        <div class="calendar-cell h-12 border border-gray-200 hover:bg-blue-50 cursor-pointer transition-colors selectable-cell"
                                             data-employee-id="{{ $employee['id'] }}"
                                             data-time-slot="{{ $slot }}"
                                             data-date="{{ date('Y-m-d') }}"
                                             data-cell-id="{{ $employee['id'] }}-{{ $slot }}">
                                        </div>
                                    </td>
                               @endforeach
                          </tr>
                      @endforeach
                      </tbody>
                  </table>
              </div>
          </div>
     </div>


<!-- –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é -->
<div id="contextMenu" class="fixed bg-white border border-gray-300 rounded-lg shadow-lg z-50 hidden">
    <div class="py-1">
        <button id="assignProjectBtn" class="w-full text-left px-4 py-2 text-sm hover:bg-gray-100 flex items-center">
            <span class="mr-2">‚úÖ</span> –ù–∞–∑–Ω–∞—á–∏—Ç—å –Ω–∞ –ø—Ä–æ–µ–∫—Ç
        </button>
        <button id="markNonWorkingBtn" class="w-full text-left px-4 py-2 text-sm hover:bg-gray-100 flex items-center">
            <span class="mr-2">üü•</span> –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –Ω–µ—Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è
        </button>
        <button id="deleteBlockBtn" class="w-full text-left px-4 py-2 text-sm hover:bg-red-100 text-red-600 flex items-center hidden">
            –£–¥–∞–ª–∏—Ç—å
        </button>
    </div>
</div>

<!-- Toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è -->


<!-- –ú–æ–¥–∞–ª–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –ø—Ä–æ–µ–∫—Ç -->
<div id="assignmentModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center h-full w-full hidden z-50">
    <div class="bg-white rounded-lg shadow-lg border w-11/12 max-w-4xl max-h-[90vh] overflow-y-auto">
        <div class="p-6">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-medium text-gray-900">–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ</h3>
                <button id="closeAssignmentModal" class="text-gray-400 hover:text-gray-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>

                                                   <form id="assignmentForm">
                  <div class="mb-4">
                      <label class="block text-sm font-medium text-gray-700 mb-2">–ü—Ä–æ–µ–∫—Ç</label>
                      <select id="projectSelect" class="w-full rounded-md border border-gray-300 shadow-sm focus:outline-none" required>
                          <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç</option>
                          @foreach($projects as $project)
                              <option value="{{ $project['id'] }}">{{ $project['name'] }}</option>
                          @endforeach
                      </select>
                  </div>

                  <div class="mb-4">
                      <label class="block text-sm font-medium text-gray-700 mb-2">–õ–∏—Å—Ç</label>
                      <select id="sheetSelect" class="w-full rounded-md border border-gray-300 shadow-sm focus:outline-none" disabled>
                          <option value="">–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ</option>
                      </select>
                  </div>

                  <div class="mb-4">
                      <label class="block text-sm font-medium text-gray-700 mb-2">–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</label>
                      <select id="specialtySelect" class="w-full rounded-md border border-gray-300 shadow-sm focus:outline-none" required>
                          <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</option>
                          <option value="administrator">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</option>
                          <option value="manager">–ú–µ–Ω–µ–¥–∂–µ—Ä</option>
                      </select>
                  </div>

                  <div class="mb-4">
                      <label class="block text-sm font-medium text-gray-700 mb-2">–°–æ—Ç—Ä—É–¥–Ω–∏–∫</label>
                      <input type="text" id="employeeInput" class="w-full rounded-md border border-gray-300 shadow-sm focus:outline-none" placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤" readonly>
                  </div>

                  <div class="mb-4">
                      <label class="block text-sm font-medium text-gray-700 mb-2">–°—É–º–º–∞</label>
                      <input type="number" id="sumInput" class="w-full rounded-md border border-gray-300 shadow-sm focus:outline-none" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É" min="1" step="1" required>
                  </div>

                  <div class="mb-4">
                      <label class="block text-sm font-medium text-gray-700 mb-2">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
                      <textarea id="commentInput" class="w-full rounded-md border border-gray-300 shadow-sm focus:outline-none" rows="3" placeholder="–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"></textarea>
                  </div>

                <div class="flex justify-end space-x-3 pt-2">
                    <button type="button" id="cancelAssignment" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200">
                        –ó–∞–∫—Ä—ã—Ç—å
                    </button>
                    <button type="submit" class="px-4 py-2 text-sm font-medium text-white bg-blue-500 border border-transparent rounded-md hover:bg-blue-600">
                        –î–æ–±–∞–≤–∏—Ç—å
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- –ú–æ–¥–∞–ª–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ—Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è -->
<div id="nonWorkingDayModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-medium text-gray-900">–î–æ–±–∞–≤–∏—Ç—å –Ω–µ—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å</h3>
                <button id="closeNonWorkingDayModal" class="text-gray-400 hover:text-gray-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>

            <form action="{{ route('personnel.non-working') }}" method="POST">
                @csrf

                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">–°–æ—Ç—Ä—É–¥–Ω–∏–∫</label>
                    <select name="employee_id" class="w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary" required>
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</option>
                                                 @foreach($employees as $employee)
                             <option value="{{ $employee['id'] }}">{{ $employee['name'] }}</option>
                         @endforeach
                    </select>
                </div>

                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">–î–∞—Ç–∞</label>
                    <input type="date" name="date" class="w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary" required>
                </div>

                <div class="flex justify-end space-x-3">
                    <button type="button" id="cancelNonWorkingDay" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200">
                        –û—Ç–º–µ–Ω–∞
                    </button>
                    <button type="submit" class="px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-md hover:bg-red-700">
                        –î–æ–±–∞–≤–∏—Ç—å
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>


<style>
    .selectable-cell {
        user-select: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
    }

    .selectable-cell.selected {
        background-color: #dbeafe !important;
        border-color: #3b82f6 !important;
        box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.3);
    }

    .calendar-block {
        position: relative;
        z-index: 10;
    }

    .delete-block-btn {
        font-size: 12px;
        padding: 2px 4px;
        border-radius: 4px;
        cursor: pointer;
    }

    .delete-block-btn:hover {
        background-color: rgba(239, 68, 68, 0.1);
    }

    #contextMenu {
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        border-radius: 8px;
        min-width: 200px;
    }

    #contextMenu button {
        transition: background-color 0.15s ease;
    }

    #contextMenu button:hover {
        background-color: #f3f4f6;
    }

    #toast {
        z-index: 9999;
    }
</style>

<style>
/* –ë–ê–ó–û–í–´–ï –°–¢–ò–õ–ò –î–õ–Ø –Ø–ß–ï–ï–ö */
.time-slot-header,
.time-slot-cell {
    width: 80px !important;
    min-width: 80px !important;
    max-width: 80px !important;
    flex: 0 0 80px !important;
    box-sizing: border-box !important;
}

/* –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –¥–ª—è –≤—Å–µ—Ö —è—á–µ–µ–∫ –≤—Ä–µ–º–µ–Ω–∏ */
#calendarTable th.time-slot-header,
#calendarTable td.time-slot-cell {
    width: 80px !important;
    min-width: 80px !important;
    max-width: 80px !important;
    flex: 0 0 80px !important;
}

/* –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ 4 —á–∞—Å–∞ */
.time-slot-header-4h,
.time-slot-cell-4h {
    width: 170px !important;
    min-width: 170px !important;
    max-width: 170px !important;
    flex: 0 0 170px !important;
    box-sizing: border-box !important;
}

#calendarTable th.time-slot-header-4h,
#calendarTable td.time-slot-cell-4h {
    width: 170px !important;
    min-width: 170px !important;
    max-width: 170px !important;
    flex: 0 0 170px !important;
}

/* –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ –Ω–µ–¥–µ–ª–∏ */
.time-slot-header-12h,
.time-slot-cell-12h {
    width: 120px !important;
    min-width: 120px !important;
    max-width: 120px !important;
    flex: 0 0 120px !important;
    box-sizing: border-box !important;
}

#calendarTable th.time-slot-header-12h,
#calendarTable td.time-slot-cell-12h {
    width: 120px !important;
    min-width: 120px !important;
    max-width: 120px !important;
    flex: 0 0 120px !important;
}

.time-slot-header-1d,
.time-slot-cell-1d {
    width: 150px !important;
    min-width: 150px !important;
    max-width: 150px !important;
    flex: 0 0 150px !important;
    box-sizing: border-box !important;
}

#calendarTable th.time-slot-header-1d,
#calendarTable td.time-slot-cell-1d {
    width: 150px !important;
    min-width: 150px !important;
    max-width: 150px !important;
    flex: 0 0 150px !important;
}
</style>



<script>
document.addEventListener('DOMContentLoaded', function() {
    let currentView = 'day';
    let currentInterval = '60m';
    let selectedCells = new Set();
    let isSelecting = false;
    let selectionStart = null;

    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
    const contextMenu = document.getElementById('contextMenu');
    const assignProjectBtn = document.getElementById('assignProjectBtn');
    const markNonWorkingBtn = document.getElementById('markNonWorkingBtn');
    const deleteBlockBtn = document.getElementById('deleteBlockBtn');

    // Toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const toast = document.getElementById('toast');
    const toastMessage = document.getElementById('toastMessage');

    function showToast(message) {
        toastMessage.textContent = message;
        toast.classList.remove('translate-y-full');
        setTimeout(() => {
            toast.classList.add('translate-y-full');
        }, 2000);
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤
    function updateIntervalOptions() {
        const intervalSelect = document.getElementById('timeInterval');
        intervalSelect.innerHTML = '';

        let options = [];
        switch (currentView) {
            case 'day':
                options = [
                    { value: '30m', text: '30 –º–∏–Ω—É—Ç' },
                    { value: '60m', text: '1 —á–∞—Å' },
                    { value: '4h', text: '4 —á–∞—Å–∞' }
                ];
                break;
            case 'week':
                options = [
                    { value: '12h', text: '12 —á–∞—Å–æ–≤' },
                    { value: '1d', text: '1 –¥–µ–Ω—å' }
                ];
                break;
            case 'month':
                options = [
                    { value: '1d', text: '1 –¥–µ–Ω—å' }
                ];
                break;
        }

                         options.forEach(option => {
            const optionElement = document.createElement('option');
            optionElement.value = option.value;
            optionElement.textContent = option.text;
            if (option.value === currentInterval) {
                optionElement.selected = true;
            }
            intervalSelect.appendChild(optionElement);
        });
    }

                       // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
    async function updateTable() {
        try {
            const selectedDate = document.getElementById('calendarDate').value;
            console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å:', `view=${currentView}&interval=${currentInterval}&date=${selectedDate}`);
            const response = await fetch(`/personnel/time-slots?view=${currentView}&interval=${currentInterval}&date=${selectedDate}`);
            const data = await response.json();
            console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:', data);

              const table = document.querySelector('#calendarTable');
              const tableScroll = document.querySelector('.table-scroll');
              const thead = table.querySelector('thead tr');
              const tbody = table.querySelector('tbody');



                                             // –£–ø—Ä–∞–≤–ª—è–µ–º —Å–∫—Ä–æ–ª–ª–æ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
                if (currentInterval === '60m' || currentInterval === '4h' || currentInterval === '12h' || (currentView === 'week' && currentInterval === '1d')) {
                    tableScroll.classList.remove('overflow-x-auto', 'whitespace-nowrap');
                    table.style.minWidth = '100%';
                } else if (currentView === 'month' && currentInterval === '1d') {
                    // –î–ª—è –º–µ—Å—è—Ü–∞ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º "–î–µ–Ω—å" –≤–∫–ª—é—á–∞–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª
                    tableScroll.classList.add('overflow-x-auto', 'whitespace-nowrap');
                    table.style.minWidth = 'max-content';
                } else {
                    tableScroll.classList.add('overflow-x-auto', 'whitespace-nowrap');
                    table.style.minWidth = 'max-content';
                }

               // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
               const timeHeader = thead.querySelector('th:first-child');
               thead.innerHTML = '';
               thead.appendChild(timeHeader);

                                                                                                                               data.timeSlots.forEach(slot => {
                    const th = document.createElement('th');
                    let className = 'px-2 py-4 text-center text-xs font-medium text-gray-500 uppercase tracking-wider time-slot-header';
                    let width = '80px';

                    if (currentInterval === '4h') {
                        className = className.replace('time-slot-header', 'time-slot-header-4h');
                        width = '170px';
                    } else if (currentInterval === '12h') {
                        className = className.replace('time-slot-header', 'time-slot-header-12h');
                        width = '120px';
                    } else if (currentInterval === '1d') {
                        className = className.replace('time-slot-header', 'time-slot-header-1d');
                        width = '150px';
                    }

                    th.className = className;
                    th.style.width = width;
                    th.style.minWidth = width;

                     th.textContent = slot;
                     thead.appendChild(th);
                 });

             // –û–±–Ω–æ–≤–ª—è–µ–º —è—á–µ–π–∫–∏
             const employees = @json($employees);
             tbody.innerHTML = '';

             employees.forEach(employee => {
                                   const row = document.createElement('tr');
                  row.className = 'employee-row';
                  row.dataset.employeeId = employee.id;
                  row.dataset.specialty = employee.specialty.name;

                 // –Ø—á–µ–π–∫–∞ —Å –∏–º–µ–Ω–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (sticky)
                 const nameCell = document.createElement('td');
                 nameCell.className = 'px-8 py-6 whitespace-nowrap sticky left-0 bg-white z-10';
                 nameCell.innerHTML = `
                     <div class="flex items-center">
                         <div class="text-base font-medium text-gray-900">${employee.name}</div>
                         <div class="ml-2 text-base text-gray-500">(${employee.specialty.name})</div>
                     </div>
                 `;
                 row.appendChild(nameCell);

                 // –Ø—á–µ–π–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
                                                     data.timeSlots.forEach(slot => {
                      const cell = document.createElement('td');
                      let className = 'px-2 py-6 whitespace-nowrap time-slot-cell';
                      let width = '80px';

                      if (currentInterval === '4h') {
                          className = className.replace('time-slot-cell', 'time-slot-cell-4h');
                          width = '170px';
                      } else if (currentInterval === '12h') {
                          className = className.replace('time-slot-cell', 'time-slot-cell-12h');
                          width = '120px';
                      } else if (currentInterval === '1d') {
                          className = className.replace('time-slot-cell', 'time-slot-cell-1d');
                          width = '150px';
                      }

                      cell.className = className;
                      cell.style.width = width;
                      cell.style.minWidth = width;

                                             cell.innerHTML = `
                          <div class="calendar-cell h-12 border border-gray-200 hover:bg-blue-50 cursor-pointer transition-colors selectable-cell"
                               data-employee-id="${employee.id}"
                               data-time-slot="${slot}"
                               data-date="${document.getElementById('calendarDate').value}"
                               data-cell-id="${employee.id}-${slot}">
                          </div>
                      `;
                      row.appendChild(cell);
                  });

                 tbody.appendChild(row);
             });

             // –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
             attachCellEventHandlers();

         } catch (error) {
             console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã:', error);
         }
     }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π —è—á–µ–µ–∫
    function attachCellEventHandlers() {
        const cells = document.querySelectorAll('.selectable-cell');

        cells.forEach(cell => {
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
            cell.addEventListener('click', function(e) {
                if (!isSelecting) {
                    e.preventDefault();
                    e.stopPropagation();

                    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤—ã–±–æ—Ä
                    clearSelection();

                    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —è—á–µ–π–∫—É –≤ –≤—ã–±–æ—Ä
                    selectedCells.add(this);
                    this.classList.add('selected');

                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
                    showContextMenu(e, [this]);
                }
            });

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º—É–ª—å—Ç–∏–≤—ã–¥–µ–ª–µ–Ω–∏—è
            cell.addEventListener('mousedown', function(e) {
                if (e.button === 0) { // –õ–µ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏
                    isSelecting = true;
                    selectionStart = this;
                    clearSelection();
                    selectedCells.add(this);
                    this.classList.add('selected');
                }
            });

            cell.addEventListener('mouseenter', function(e) {
                if (isSelecting && selectionStart) {
                    selectedCells.add(this);
                    this.classList.add('selected');
                }
            });
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –º—ã—à–∏
        document.addEventListener('mouseup', function() {
            if (isSelecting && selectedCells.size > 0) {
                isSelecting = false;
                showContextMenuForSelection();
            }
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –≤—ã–±–æ—Ä–∞
    function clearSelection() {
        selectedCells.forEach(cell => {
            cell.classList.remove('selected');
        });
        selectedCells.clear();
        hideContextMenu();
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è –æ–¥–∏–Ω–æ—á–Ω–æ–π —è—á–µ–π–∫–∏
    function showContextMenu(e, cells) {
        const cell = cells[0];
        const rect = cell.getBoundingClientRect();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –±–ª–æ–∫ –≤ —è—á–µ–π–∫–µ
        const hasBlock = cell.querySelector('.calendar-block');

        if (hasBlock) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è
            deleteBlockBtn.classList.remove('hidden');
            assignProjectBtn.classList.add('hidden');
            markNonWorkingBtn.classList.add('hidden');
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
            deleteBlockBtn.classList.add('hidden');
            assignProjectBtn.classList.remove('hidden');
            markNonWorkingBtn.classList.remove('hidden');
        }

        // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –º–µ–Ω—é
        contextMenu.style.left = rect.right + 'px';
        contextMenu.style.top = rect.top + 'px';
        contextMenu.classList.remove('hidden');

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —è—á–µ–π–∫–∏
        contextMenu.dataset.selectedCells = JSON.stringify(Array.from(cells).map(c => c.dataset.cellId));
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
    function showContextMenuForSelection() {
        if (selectedCells.size === 0) return;

        const cells = Array.from(selectedCells);
        const firstCell = cells[0];
        const lastCell = cells[cells.length - 1];

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –±–ª–æ–∫–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —è—á–µ–π–∫–∞—Ö
        const hasBlocks = cells.some(cell => cell.querySelector('.calendar-block'));

        if (hasBlocks) {
            deleteBlockBtn.classList.remove('hidden');
            assignProjectBtn.classList.add('hidden');
            markNonWorkingBtn.classList.add('hidden');
        } else {
            deleteBlockBtn.classList.add('hidden');
            assignProjectBtn.classList.remove('hidden');
            markNonWorkingBtn.classList.remove('hidden');
        }

        // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –º–µ–Ω—é –≤ —Ü–µ–Ω—Ç—Ä–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è
        const firstRect = firstCell.getBoundingClientRect();
        const lastRect = lastCell.getBoundingClientRect();

        contextMenu.style.left = (firstRect.left + (lastRect.right - firstRect.left) / 2) + 'px';
        contextMenu.style.top = (firstRect.bottom + 5) + 'px';
        contextMenu.classList.remove('hidden');

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —è—á–µ–π–∫–∏
        contextMenu.dataset.selectedCells = JSON.stringify(cells.map(c => c.dataset.cellId));
    }

    // –§—É–Ω–∫—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
    function hideContextMenu() {
        contextMenu.classList.add('hidden');
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
    assignProjectBtn.addEventListener('click', function() {
        const selectedCellIds = JSON.parse(contextMenu.dataset.selectedCells || '[]');
        const cells = selectedCellIds.map(id => document.querySelector(`[data-cell-id="${id}"]`));

        // –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞
        createProjectBlock(cells);
        hideContextMenu();
        showToast('–ü—Ä–æ–µ–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω');
    });

    markNonWorkingBtn.addEventListener('click', function() {
        const selectedCellIds = JSON.parse(contextMenu.dataset.selectedCells || '[]');
        const cells = selectedCellIds.map(id => document.querySelector(`[data-cell-id="${id}"]`));

        // –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫ –Ω–µ—Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        createNonWorkingBlock(cells);
        hideContextMenu();
        showToast('–ù–µ—Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –¥–æ–±–∞–≤–ª–µ–Ω–æ');
    });

    deleteBlockBtn.addEventListener('click', function() {
        const selectedCellIds = JSON.parse(contextMenu.dataset.selectedCells || '[]');
        const cells = selectedCellIds.map(id => document.querySelector(`[data-cell-id="${id}"]`));

        // –£–¥–∞–ª—è–µ–º –±–ª–æ–∫–∏
        cells.forEach(cell => {
            const block = cell.querySelector('.calendar-block');
            if (block) {
                block.remove();
            }
        });
        hideContextMenu();
        showToast('–ë–ª–æ–∫ —É–¥–∞–ª—ë–Ω');
    });

                   // –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
      function createProjectBlock(cells) {
          if (cells.length === 0) return;

          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
          document.getElementById('assignmentModal').classList.remove('hidden');

          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —è—á–µ–π–∫–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –º–æ–¥–∞–ª–∫–µ
          document.getElementById('assignmentModal').dataset.selectedCells = JSON.stringify(cells.map(c => c.dataset.cellId));

          // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è –º–æ–¥–∞–ª–∫–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –ø–µ—Ä–≤–æ–π –≤—ã–±—Ä–∞–Ω–Ω–æ–π —è—á–µ–π–∫–∏
          const firstCell = cells[0];
          const employeeId = firstCell.dataset.employeeId;

          // –ù–∞—Ö–æ–¥–∏–º –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ ID
          const employees = @json($employees);
          const employee = employees.find(emp => emp.id == employeeId);
          if (employee) {
              document.getElementById('employeeInput').value = employee.name;
          }
      }

        // –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–∫–∞ –Ω–µ—Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    function createNonWorkingBlock(cells) {
        if (cells.length === 0) return;

        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –±–ª–æ–∫
        const firstCell = cells[0];

        // –û—á–∏—â–∞–µ–º –≤—Å–µ —è—á–µ–π–∫–∏
        cells.forEach(cell => {
            cell.innerHTML = '';
        });

                 // –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫ –≤ –ø–µ—Ä–≤–æ–π —è—á–µ–π–∫–µ
         const block = document.createElement('div');
         block.className = 'calendar-block bg-red-100 border border-red-300 rounded p-2 h-full flex items-center justify-center relative group';
         block.innerHTML = `
             <span class="text-red-800 font-medium text-sm">–ù–µ—Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è</span>
         `;

         firstCell.appendChild(block);

         // –°–∫—Ä—ã–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —è—á–µ–π–∫–∏
         for (let i = 1; i < cells.length; i++) {
             cells[i].style.display = 'none';
         }
     }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
    document.addEventListener('click', function(e) {
        if (!contextMenu.contains(e.target)) {
            hideContextMenu();
        }
    });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –≤–∏–¥–∞
    document.querySelectorAll('.view-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
            document.querySelectorAll('.view-btn').forEach(b => {
                b.classList.remove('bg-primary', 'text-white');
                b.classList.add('bg-white', 'text-gray-700');
            });

            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ —Ç–µ–∫—É—â–µ–π –∫–Ω–æ–ø–∫–µ
            this.classList.remove('bg-white', 'text-gray-700');
            this.classList.add('bg-primary', 'text-white');

            currentView = this.dataset.view;
            console.log('–ò–∑–º–µ–Ω–µ–Ω –≤–∏–¥ –Ω–∞', currentView);

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∏–¥–∞
            if (currentView === 'week') {
                currentInterval = '12h';
            } else if (currentView === 'day') {
                currentInterval = '60m';
            } else if (currentView === 'month') {
                currentInterval = '1d';
            }

            console.log('–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–Ω—Ç–µ—Ä–≤–∞–ª:', currentInterval);

            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –∏ —Ç–∞–±–ª–∏—Ü—É
            updateIntervalOptions();
            updateTable();
        });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    document.getElementById('timeInterval').addEventListener('change', function() {
        currentInterval = this.value;
        console.log('–ò–∑–º–µ–Ω–µ–Ω –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞', currentInterval);
        updateTable();
    });

                                       // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
       document.getElementById('assignmentForm').addEventListener('submit', function(e) {
           e.preventDefault();

           const selectedCellIds = JSON.parse(document.getElementById('assignmentModal').dataset.selectedCells || '[]');
           const cells = selectedCellIds.map(id => document.querySelector(`[data-cell-id="${id}"]`));

           // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
           const projectId = document.getElementById('projectSelect').value;
           const projectName = document.getElementById('projectSelect').options[document.getElementById('projectSelect').selectedIndex].text;
           const sheetSelect = document.getElementById('sheetSelect').value;
           const specialtySelect = document.getElementById('specialtySelect').value;
           const employeeInput = document.getElementById('employeeInput').value;
           const sum = document.getElementById('sumInput').value;
           const comment = document.getElementById('commentInput').value;

           // –í–∞–ª–∏–¥–∞—Ü–∏—è
           if (!projectId || !specialtySelect || !sum || sum < 1) {
               alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è. –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1.');
               return;
           }

           // –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞
           createProjectBlockFromModal(cells, projectName);

           // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
           document.getElementById('assignmentModal').classList.add('hidden');

           // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
           showToast('–ü—Ä–æ–µ–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω');

           // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
           console.log('–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', {
               projectId,
               projectName,
               sheetSelect,
               specialtySelect,
               employeeInput,
               sum,
               comment,
               selectedCells: selectedCellIds
           });
       });

    // –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ –º–æ–¥–∞–ª–∫–∏
    function createProjectBlockFromModal(cells, projectName) {
        if (cells.length === 0) return;

        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –±–ª–æ–∫
        const firstCell = cells[0];

        // –û—á–∏—â–∞–µ–º –≤—Å–µ —è—á–µ–π–∫–∏
        cells.forEach(cell => {
            cell.innerHTML = '';
        });

                 // –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫ –≤ –ø–µ—Ä–≤–æ–π —è—á–µ–π–∫–µ
         const block = document.createElement('div');
         block.className = 'calendar-block bg-blue-100 border border-blue-300 rounded p-2 h-full flex items-center justify-center relative group';
         block.innerHTML = `
             <span class="text-blue-800 font-medium text-sm">${projectName}</span>
         `;

        firstCell.appendChild(block);

        // –°–∫—Ä—ã–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —è—á–µ–π–∫–∏
        for (let i = 1; i < cells.length; i++) {
            cells[i].style.display = 'none';
        }
    }

                   // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª–µ–π –º–æ–¥–∞–ª–∫–∏
      function clearAssignmentModal() {
          document.getElementById('projectSelect').value = '';
          document.getElementById('sheetSelect').value = '';
          document.getElementById('specialtySelect').value = '';
          document.getElementById('employeeInput').value = '';
          document.getElementById('sumInput').value = '';
          document.getElementById('commentInput').value = '';
      }

     // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
     document.getElementById('closeAssignmentModal').addEventListener('click', function() {
         document.getElementById('assignmentModal').classList.add('hidden');
         clearAssignmentModal();
     });

     document.getElementById('cancelAssignment').addEventListener('click', function() {
         document.getElementById('assignmentModal').classList.add('hidden');
         clearAssignmentModal();
     });

                                               // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ—ë –æ–±–ª–∞—Å—Ç–∏
        document.getElementById('assignmentModal').addEventListener('click', function(e) {
            if (e.target === this) {
                this.classList.add('hidden');
                clearAssignmentModal();
            }
        });



    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º
    document.getElementById('employeeFilter').addEventListener('change', function() {
        const selectedEmployeeId = this.value;
        const rows = document.querySelectorAll('.employee-row');

        rows.forEach(row => {
            if (!selectedEmployeeId || row.dataset.employeeId === selectedEmployeeId) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è–º
    document.getElementById('specialtyFilter').addEventListener('change', function() {
        const selectedSpecialty = this.options[this.selectedIndex].text;
        const rows = document.querySelectorAll('.employee-row');

        rows.forEach(row => {
            if (!selectedSpecialty || selectedSpecialty === '–í—Å–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏' || row.dataset.specialty === selectedSpecialty) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞—Ç—ã
    document.getElementById('calendarDate').addEventListener('change', function() {
        const newDate = this.value;
        document.querySelectorAll('.calendar-cell').forEach(cell => {
            cell.dataset.date = newDate;
        });
        console.log('–ò–∑–º–µ–Ω–µ–Ω–∞ –¥–∞—Ç–∞ –Ω–∞', newDate);

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞—Ç—ã
        updateTable();
    });



                           // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ –±–µ–∑ —Å–∫—Ä–æ–ª–ª–∞
    const table = document.querySelector('#calendarTable');
    const tableScroll = document.querySelector('.table-scroll');
    if (currentInterval === '60m' || currentInterval === '4h' || currentInterval === '12h' || (currentView === 'week' && currentInterval === '1d')) {
        tableScroll.classList.remove('overflow-x-auto', 'whitespace-nowrap');
        table.style.minWidth = '100%';
    } else if (currentView === 'month' && currentInterval === '1d') {
        // –î–ª—è –º–µ—Å—è—Ü–∞ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º "–î–µ–Ω—å" –≤–∫–ª—é—á–∞–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª
        tableScroll.classList.add('overflow-x-auto', 'whitespace-nowrap');
        table.style.minWidth = 'max-content';
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –∏ —Ç–∞–±–ª–∏—Ü—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    updateIntervalOptions();
    updateTable();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    attachCellEventHandlers();


});
</script>

